package app;

import java.awt.HeadlessException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Judá Aarón
 */
public class principal extends javax.swing.JFrame implements Runnable {

    String hora, minutos, segundos;
    Thread hilo;
    ImageIcon Imagen[] = new ImageIcon[7];
    int contImages = 1;

    /**
     * Creates new form principal
     */
    public principal() {
        initComponents();
        setResizable(false);
        this.setExtendedState(MAXIMIZED_BOTH);
        setTitle("TIENDA");
        this.setLocationRelativeTo(null);
        hilo = new Thread(this);
        hilo.start();
        for (int i = 1; i < 6; i++) {
            Imagen[i] = new ImageIcon(getClass().getResource("/app/fotos/judd" + i + ".jpeg"));
            jLabel10.setIcon(Imagen[1]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login_clientes = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        id_login_cliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        password_login_cliente = new javax.swing.JPasswordField();
        btn_ingresarCliente = new javax.swing.JButton();
        btn_regresarCliente = new javax.swing.JButton();
        btn_crear_cliente = new javax.swing.JButton();
        fondo_loginCliente = new javax.swing.JLabel();
        login_empleados = new javax.swing.JDialog();
        btn_login_empleado = new javax.swing.JButton();
        user_empleado = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        password_empleado = new javax.swing.JPasswordField();
        btn_regresar_empleado = new javax.swing.JButton();
        fondo_login_empleados = new javax.swing.JLabel();
        Perfil_clientes = new javax.swing.JDialog();
        siguiente = new javax.swing.JButton();
        anterior = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        administradores = new javax.swing.JDialog();
        tabbed_eliminar = new javax.swing.JTabbedPane();
        panel_crear = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_crear = new javax.swing.JTable();
        boton_crear = new javax.swing.JButton();
        btn_regresar4 = new javax.swing.JButton();
        cb_crear = new javax.swing.JComboBox<>();
        panel_modificar = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_modificar = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        btn_regresar3 = new javax.swing.JButton();
        panel_eliminar = new javax.swing.JPanel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_eliminar = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        btn_regresar2 = new javax.swing.JButton();
        fondo_admiistradores = new javax.swing.JLabel();
        titulo = new javax.swing.JLabel();
        boton_salir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btn_admin = new javax.swing.JButton();
        hora_jbl = new javax.swing.JLabel();
        titulo2 = new javax.swing.JLabel();
        boton_cliente1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        boton_empleado = new javax.swing.JButton();
        fondo_princiipal = new javax.swing.JLabel();
        fondo_principal2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        login_clientes.setUndecorated(true);
        login_clientes.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        login_clientes.getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 380, 220));

        jLabel12.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("¿Eres cliente nuevo?");
        login_clientes.getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 36, 130, 30));

        id_login_cliente.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        id_login_cliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        login_clientes.getContentPane().add(id_login_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, 180, 30));

        jLabel3.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CLIENT LOGIN");
        login_clientes.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 150, 30));

        password_login_cliente.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        password_login_cliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        login_clientes.getContentPane().add(password_login_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, 180, 30));

        btn_ingresarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/login (1).png"))); // NOI18N
        btn_ingresarCliente.setContentAreaFilled(false);
        btn_ingresarCliente.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/login_1.png"))); // NOI18N
        login_clientes.getContentPane().add(btn_ingresarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 500, 140, 60));

        btn_regresarCliente.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_regresarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reply-message.png"))); // NOI18N
        btn_regresarCliente.setText("Regresar");
        btn_regresarCliente.setContentAreaFilled(false);
        btn_regresarCliente.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reply-message (1).png"))); // NOI18N
        btn_regresarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_regresarClienteMouseClicked(evt);
            }
        });
        login_clientes.getContentPane().add(btn_regresarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 570, 180, 60));

        btn_crear_cliente.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btn_crear_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/follow.png"))); // NOI18N
        btn_crear_cliente.setText("Crea una cuenta");
        btn_crear_cliente.setContentAreaFilled(false);
        btn_crear_cliente.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/follow (1).png"))); // NOI18N
        login_clientes.getContentPane().add(btn_crear_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 200, 80));

        fondo_loginCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/WhatsApp Image 2021-03-18 at 21.35.49.jpeg"))); // NOI18N
        login_clientes.getContentPane().add(fondo_loginCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 630));

        login_empleados.setUndecorated(true);
        login_empleados.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_login_empleado.setText("LOGIN");
        login_empleados.getContentPane().add(btn_login_empleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 200, 100, 30));
        login_empleados.getContentPane().add(user_empleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, 160, 30));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("EMPLOYEE LOGIN");
        login_empleados.getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 300, 200, 30));
        login_empleados.getContentPane().add(password_empleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 390, 160, 30));

        btn_regresar_empleado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_regresar_empleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reply-message.png"))); // NOI18N
        btn_regresar_empleado.setText("Regresar");
        btn_regresar_empleado.setContentAreaFilled(false);
        btn_regresar_empleado.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        btn_regresar_empleado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btn_regresar_empleado.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/reply-message (1).png"))); // NOI18N
        btn_regresar_empleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_regresar_empleadoMouseClicked(evt);
            }
        });
        login_empleados.getContentPane().add(btn_regresar_empleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 170, 90));

        fondo_login_empleados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/empleadologin.jpg"))); // NOI18N
        login_empleados.getContentPane().add(fondo_login_empleados, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 620, 530));

        Perfil_clientes.setUndecorated(true);
        Perfil_clientes.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        siguiente.setText("jButton1");
        siguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteActionPerformed(evt);
            }
        });
        Perfil_clientes.getContentPane().add(siguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 670, -1, -1));

        anterior.setText("jButton2");
        anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anteriorActionPerformed(evt);
            }
        });
        Perfil_clientes.getContentPane().add(anterior, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 660, -1, -1));

        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 204), 3));
        Perfil_clientes.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 1270, 590));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget.gif"))); // NOI18N
        Perfil_clientes.getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 0, 800, 590));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget.gif"))); // NOI18N
        Perfil_clientes.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 600));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget.gif"))); // NOI18N
        Perfil_clientes.getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 750, 600));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget.gif"))); // NOI18N
        Perfil_clientes.getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 150, 810, 610));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/categories.png"))); // NOI18N
        jMenu1.setText("Categorías");
        jMenu1.setMinimumSize(new java.awt.Dimension(100, 70));
        jMenu1.setPreferredSize(new java.awt.Dimension(100, 30));
        jMenu1.setRequestFocusEnabled(false);
        jMenu1.setRolloverEnabled(false);

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        Perfil_clientes.setJMenuBar(jMenuBar1);

        administradores.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabbed_eliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 204)));
        tabbed_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabbed_eliminarMouseClicked(evt);
            }
        });

        panel_crear.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_crear.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla_crear);

        panel_crear.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 720, 250));

        boton_crear.setText("jButton1");
        boton_crear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_crearMouseClicked(evt);
            }
        });
        panel_crear.add(boton_crear, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, 100, 40));

        btn_regresar4.setText("Regresar");
        btn_regresar4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_regresar4MouseClicked(evt);
            }
        });
        panel_crear.add(btn_regresar4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 350, 100, 40));

        cb_crear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PRODUCTO", "CLIENTE", "CLIENTE_TIENDA", "CONTRATO", "CATEGORIA", "TIENE_EN_CARRITO", "CLIENTE_FRECUENTE", "CLIENTE_POCO_FRECUENTE", "DETALLE_FACTURA", "ALMACEN", "INVENTARIO", "ORDEN", "CLIENTE_VIRTUAL", "FACTURA", "TIENDA" }));
        cb_crear.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_crearItemStateChanged(evt);
            }
        });
        panel_crear.add(cb_crear, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 30));

        tabbed_eliminar.addTab("Crear", panel_crear);

        panel_modificar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        panel_modificar.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 90, 20));

        tabla_modificar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabla_modificar);

        panel_modificar.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 540, 280));

        jButton3.setText("jButton3");
        panel_modificar.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, -1, -1));

        btn_regresar3.setText("Regresar");
        btn_regresar3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_regresar3MouseClicked(evt);
            }
        });
        panel_modificar.add(btn_regresar3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 380, -1, -1));

        tabbed_eliminar.addTab("Modificar", panel_modificar);

        panel_eliminar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        panel_eliminar.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        tabla_eliminar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tabla_eliminar);

        panel_eliminar.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 570, 360));

        jButton5.setText("jButton5");
        panel_eliminar.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, -1, -1));

        btn_regresar2.setText("regresar");
        btn_regresar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_regresar2MouseClicked(evt);
            }
        });
        panel_eliminar.add(btn_regresar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 390, -1, -1));

        tabbed_eliminar.addTab("Eliminar", panel_eliminar);

        administradores.getContentPane().add(tabbed_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 830, 500));
        administradores.getContentPane().add(fondo_admiistradores, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 450));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        titulo.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("¡Bienvenidos a tienda electronica!");
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 550, 30));

        boton_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/exit (2).png"))); // NOI18N
        boton_salir.setContentAreaFilled(false);
        boton_salir.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/exit (3).png"))); // NOI18N
        boton_salir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_salirMouseClicked(evt);
            }
        });
        getContentPane().add(boton_salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 460, 230, 140));

        jLabel1.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel1.setText("Empleado");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 320, 90, 40));

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel7.setText("Hora actual");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 700, 100, 30));

        btn_admin.setText("admin");
        btn_admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_adminMouseClicked(evt);
            }
        });
        getContentPane().add(btn_admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 410, -1, -1));

        hora_jbl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        hora_jbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hora_jbl.setText("00:00:00");
        getContentPane().add(hora_jbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 730, 110, 40));

        titulo2.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        titulo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo2.setText("¿Qué eres?");
        getContentPane().add(titulo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 170, 140, 40));

        boton_cliente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/customer-review.png"))); // NOI18N
        boton_cliente1.setContentAreaFilled(false);
        boton_cliente1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/customer-review (1).png"))); // NOI18N
        boton_cliente1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_cliente1MouseClicked(evt);
            }
        });
        getContentPane().add(boton_cliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 210, 240, 120));

        jLabel2.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cliente");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 320, 80, 40));

        boton_empleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/employee (1).png"))); // NOI18N
        boton_empleado.setContentAreaFilled(false);
        boton_empleado.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/employee (2).png"))); // NOI18N
        boton_empleado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_empleadoMouseClicked(evt);
            }
        });
        getContentPane().add(boton_empleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, 180, 120));

        fondo_princiipal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget2.gif"))); // NOI18N
        getContentPane().add(fondo_princiipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 590));

        fondo_principal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget2.gif"))); // NOI18N
        getContentPane().add(fondo_principal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 820, 590));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget2.gif"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 800));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget2.gif"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, -150, 1030, 1100));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget2.gif"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 0, 860, 940));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/electronicgadget2.gif"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 860, 880));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_salirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_salirMouseClicked
        System.exit(0);
    }//GEN-LAST:event_boton_salirMouseClicked

    private void boton_cliente1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_cliente1MouseClicked
//        TextPrompt cc = new TextPrompt("ID Cliente", id_login_cliente);
//        TextPrompt cc2 = new TextPrompt("Password", password_login_cliente);
        Perfil_clientes.pack();
        Perfil_clientes.setModal(true);
        Perfil_clientes.setLocationRelativeTo(null);
        Perfil_clientes.setVisible(true);

    }//GEN-LAST:event_boton_cliente1MouseClicked

    private void boton_empleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_empleadoMouseClicked
        TextPrompt e1 = new TextPrompt("Username", user_empleado);
        TextPrompt e2 = new TextPrompt("Password", password_empleado);
        login_empleados.pack();
        login_empleados.setModal(true);
        login_empleados.setLocationRelativeTo(null);
        login_empleados.setVisible(true);
    }//GEN-LAST:event_boton_empleadoMouseClicked

    private void btn_regresar_empleadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regresar_empleadoMouseClicked
        login_empleados.dispose();
    }//GEN-LAST:event_btn_regresar_empleadoMouseClicked

    private void btn_regresarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regresarClienteMouseClicked
        login_clientes.dispose();
    }//GEN-LAST:event_btn_regresarClienteMouseClicked

    private void siguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteActionPerformed
        if (contImages == 5) {
            contImages = 0;
        }
        contImages++;
        jLabel10.setIcon(Imagen[contImages]);
    }//GEN-LAST:event_siguienteActionPerformed

    private void anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anteriorActionPerformed
        if (contImages == 1) {
            contImages = 5;
        }
        contImages--;
        jLabel10.setIcon(Imagen[contImages]);
    }//GEN-LAST:event_anteriorActionPerformed

    private void btn_adminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_adminMouseClicked

        ////////////////////////
        tabla_crear.setModel(new DefaultTableModel());
        DefaultTableModel model = (DefaultTableModel) tabla_crear.getModel();
        String[] arr = {"idProducto", "fabricante", "nombreProducto", "modelo", "precio", "tipoProducto", "descripcion"};
        for (int j = 0; j < arr.length; j++) {
            model.addColumn(arr[j]);
        }
        model.setNumRows(1);

        arregloAtributos = arr;
        administradores.pack();
        administradores.setModal(true);
        administradores.setLocationRelativeTo(null);
        administradores.setVisible(true);

    }//GEN-LAST:event_btn_adminMouseClicked

    private void btn_regresar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regresar2MouseClicked
        administradores.dispose();
    }//GEN-LAST:event_btn_regresar2MouseClicked

    private void btn_regresar3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regresar3MouseClicked
        administradores.dispose();
    }//GEN-LAST:event_btn_regresar3MouseClicked

    private void btn_regresar4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_regresar4MouseClicked
        administradores.dispose();
    }//GEN-LAST:event_btn_regresar4MouseClicked

    private void cb_crearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_crearItemStateChanged
        // TODO add your handling code here:
        tabla_crear.setModel(new DefaultTableModel());
        DefaultTableModel model = (DefaultTableModel) tabla_crear.getModel();

        if (cb_crear.getSelectedItem() != null) {
            String contenido = (String) cb_crear.getSelectedItem();

            switch (contenido) {
                case "PRODUCTO": {
                    String[] arr = {"idProducto", "fabricante", "nombreProducto", "modelo", "precio", "tipoProducto", "descripcion"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }

                case "CLIENTE_TIENDA": {
                    String[] arr = {"idCliente"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "CONTRATO": {
                    String[] arr = {"numCuenta", "Cuota", "idCliente"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "CATEGORIA": {

                    String[] arr = {"idProducto", "nombreCategoria"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);

                    break;
                }
                case "TIENE_EN_CARRITO": {
                    String[] arr = {"nombreUsuario", "idProducto", "cantidadProductoCarrito"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "CLIENTE_FRECUENTE": {
                    String[] arr = {"idCliente", "nombreCliente"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "CLIENTE_POCO_FRECUENTE": {
                    String[] arr = {"idCliente", "nombreCliente"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "DETALLE_FACTURA": {
                    String[] arr = {"NoFactura", "idProducto", "cantidadProducto", "ISV"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "ALMACEN": {
                    String[] arr = {"codigoAlmacen", "ciudad"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "INVENTARIO": {
                    String[] arr = {"codigoAlmacen", "codigoTienda", "idProducto", "cantidadInventario"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "ORDEN": {
                    String[] arr = {"noOrden", "idCliente", "nombreRemitemte", "empresaEnvio", "direccionEnvio", "noSeguimiento"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "CLIENTE_VIRTUAL": {
                    String[] arr = {"idCliente", "direccionFacturacion", "nombreUsario", "password", "numeroTarjeta", "tarjetahabiente", "mesVencimiento", "yearVencimiento", "codigoSeguridad"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "FACTURA": {
                    String[] arr = {"NoFactura", "codigoTienda", "direccion", "rtn", "fechaEmision", "idCliente"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
                case "TIENDA": {
                    String[] arr = {"codigoTienda", "ubicacion"};
                    arregloAtributos = arr;
                    for (int j = 0; j < arr.length; j++) {
                        model.addColumn(arr[j]);
                    }
                    model.setNumRows(1);
                    break;
                }
            }

        } else {
//            

        }

    }//GEN-LAST:event_cb_crearItemStateChanged

    private void boton_crearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boton_crearMouseClicked
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) tabla_crear.getModel();
        if (validarIngresoTable(tabla_crear, false)) {
            Object k = new Object[arregloAtributos.length];
            model.addRow((Object[]) k);
        }
        tabla_crear.setEnabled(false);
        Connection con = conectarBase.getConexion();

        String guardar = "";
        for (int j = 0; j < model.getColumnCount(); j++) {
            guardar += model.getValueAt(0, j).toString() + "%";
        }

        String[] tokens = guardar.split("%");
        PreparedStatement ps;

        switch ((String) cb_crear.getSelectedItem()) {
            case "PRODUCTO": {

                    //ps.setInt(1, Integer.parseInt(tokens[0]));
//            ps.setString(1, tokens[1]);
//            ps.setString(2, tokens[2]);
//            ps.setString(3, tokens[3]);
//            ps.setFloat(4, Float.parseFloat(tokens[4]));
//            ps.setString(5, tokens[5]);
//            ps.setString(6, tokens[6]);
                try {
                    ps = con.prepareStatement("INSERT INTO producto (fabricante, nombreProducto, modelo, precio, tipoProducto, descripcion) VALUES (?,?,?,?,?,?)");
                    for (int i = 1; i < tokens.length; i++) {
                        if (i == 4) {
                            ps.setFloat(i, Float.parseFloat(tokens[i]));
                        } else {

                            ps.setString(i, tokens[i]);
                        }

                    }
                    ps.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }

                break;
            }

            case "CLIENTE_TIENDA": {
                String[] arr = {"idCliente"};
                
                try {
                    ps = con.prepareStatement("INSERT INTO producto (idCliente) VALUES (?)");
                    for (int i = 1; i < tokens.length; i++) {
                        System.out.println(tokens[i]);
                        if (i == 4) {
                            ps.setFloat(i, Float.parseFloat(tokens[i]));
                        } else {

                            ps.setString(i, tokens[i]);
                        }

                    }
                    ps.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            }
            case "CONTRATO": {/////////////////////////////
                try {
                    ps = con.prepareStatement("INSERT INTO contrato (Cuota, numCuenta, idCliente) VALUES (?,?,?)");
                    for (int i = 1; i < tokens.length; i++) {
                        ps.setInt(i, Integer.parseInt(tokens[i]));

                    }
                    ps.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
            }
            case "CATEGORIA": {

                String[] arr = {"idProducto", "nombreCategoria"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);

                break;
            }
            case "TIENE_EN_CARRITO": {
                String[] arr = {"nombreUsuario", "idProducto", "cantidadProductoCarrito"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "CLIENTE_FRECUENTE": {
                String[] arr = {"idCliente", "nombreCliente"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "CLIENTE_POCO_FRECUENTE": {
                String[] arr = {"idCliente", "nombreCliente"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "DETALLE_FACTURA": {
                String[] arr = {"NoFactura", "idProducto", "cantidadProducto", "ISV"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "ALMACEN": {
                String[] arr = {"codigoAlmacen", "ciudad"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "INVENTARIO": {
                String[] arr = {"codigoAlmacen", "codigoTienda", "idProducto", "cantidadInventario"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "ORDEN": {
                String[] arr = {"noOrden", "idCliente", "nombreRemitemte", "empresaEnvio", "direccionEnvio", "noSeguimiento"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "CLIENTE_VIRTUAL": {
                String[] arr = {"idCliente", "direccionFacturacion", "nombreUsario", "password", "numeroTarjeta", "tarjetahabiente", "mesVencimiento", "yearVencimiento", "codigoSeguridad"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "FACTURA": {
                String[] arr = {"NoFactura", "codigoTienda", "direccion", "rtn", "fechaEmision", "idCliente"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
            case "TIENDA": {
                String[] arr = {"codigoTienda", "ubicacion"};
                arregloAtributos = arr;
                for (int j = 0; j < arr.length; j++) {
                    model.addColumn(arr[j]);
                }
                model.setNumRows(1);
                break;
            }
        }

//        try {
//
//            Connection con = conectarBase.getConexion();
//
//            PreparedStatement ps = con.prepareStatement("INSERT INTO cliente (idCliente, nombreCliente) VALUES (?,?)");
//
//            ps.setInt(1, id);
//
//            ps.setString(2, nombreCliente);
//            String matricula = this.txt_Matricula.getText();
//            String nombre = this.txt_nombre.getText();
//            int edad = Integer.parseInt(txt_edad.getText());
//            String email = txt_email.getText();
//
//            try {
//                Connection con = conection.getConexion();
//                PreparedStatement ps = con.prepareStatement("INSERT INTO alumnos (matricula, nombre, email, edad,activo) VALUES (?,?,?,?,?)");
//                ps.setString(1, matricula);
//                ps.setString(2, nombre);
//                ps.setString(3, email);
//                ps.setInt(4, edad);
//                ps.setInt(5, 1);
//                ps.executeUpdate();
//                JOptionPane.showMessageDialog(null, "Registro guardado");
//            } catch (HeadlessException | SQLException e) {
//                JOptionPane.showMessageDialog(null, e);
//            }

    }//GEN-LAST:event_boton_crearMouseClicked

    private void tabbed_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabbed_eliminarMouseClicked
        // TODO add your handling code here:
        tabla_crear.setModel(new DefaultTableModel());
        tabla_crear.setEnabled(true);
        tabla_modificar.setModel(new DefaultTableModel());
        tabla_modificar.setEnabled(true);
        tabla_eliminar.setModel(new DefaultTableModel());
        tabla_eliminar.setEnabled(true);
    }//GEN-LAST:event_tabbed_eliminarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Perfil_clientes;
    private javax.swing.JDialog administradores;
    private javax.swing.JButton anterior;
    private javax.swing.JButton boton_cliente1;
    private javax.swing.JButton boton_crear;
    private javax.swing.JButton boton_empleado;
    private javax.swing.JButton boton_salir;
    private javax.swing.JButton btn_admin;
    private javax.swing.JButton btn_crear_cliente;
    private javax.swing.JButton btn_ingresarCliente;
    private javax.swing.JButton btn_login_empleado;
    private javax.swing.JButton btn_regresar2;
    private javax.swing.JButton btn_regresar3;
    private javax.swing.JButton btn_regresar4;
    private javax.swing.JButton btn_regresarCliente;
    private javax.swing.JButton btn_regresar_empleado;
    private javax.swing.JComboBox<String> cb_crear;
    private javax.swing.JLabel fondo_admiistradores;
    private javax.swing.JLabel fondo_loginCliente;
    private javax.swing.JLabel fondo_login_empleados;
    private javax.swing.JLabel fondo_princiipal;
    private javax.swing.JLabel fondo_principal2;
    private javax.swing.JLabel hora_jbl;
    private javax.swing.JTextField id_login_cliente;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JDialog login_clientes;
    private javax.swing.JDialog login_empleados;
    private javax.swing.JPanel panel_crear;
    private javax.swing.JPanel panel_eliminar;
    private javax.swing.JPanel panel_modificar;
    private javax.swing.JPasswordField password_empleado;
    private javax.swing.JPasswordField password_login_cliente;
    private javax.swing.JButton siguiente;
    private javax.swing.JTabbedPane tabbed_eliminar;
    private javax.swing.JTable tabla_crear;
    private javax.swing.JTable tabla_eliminar;
    private javax.swing.JTable tabla_modificar;
    private javax.swing.JLabel titulo;
    private javax.swing.JLabel titulo2;
    private javax.swing.JTextField user_empleado;
    // End of variables declaration//GEN-END:variables
    String[] arregloAtributos;

    private boolean validarIngresoTable(JTable tabla, boolean guardar) {
        DefaultTableModel model = (DefaultTableModel) tabla_crear.getModel();
        //super funcion secreta que me 4actualize el dqu
        if (tabla_crear.isEditing()) {
            tabla_crear.getCellEditor().stopCellEditing();
        }
        if (model.getRowCount() != 0) {
            for (int i = 0; i < model.getColumnCount(); i++) {//se puede poner otro for para rows pero es feo pero asi soy feliz
                if (model.getValueAt(model.getRowCount() - 1, i) == null) {
                    if (guardar) {
                        model.removeRow(model.getRowCount() - 1);
                    } else {
                        JOptionPane.showMessageDialog(null, "No puede dejar ningun campo vacio!");
                        return false;
                    }
                }
                if ((model.getValueAt(model.getRowCount() - 1, i).toString().length() > 80) && !model.getValueAt(model.getRowCount() - 1, i).toString().equals("ubicacion")) {
                    JOptionPane.showMessageDialog(null, "En el campo \""
                            + model.getValueAt(model.getRowCount() - 1, i).toString() + "\" se esta pasando de la longitud maxima"
                            + " que es 80");
                    model.setValueAt("", model.getRowCount() - 1, i);
                    return false;
                } else if ((model.getValueAt(model.getRowCount() - 1, i).toString().length() > 150) && model.getValueAt(model.getRowCount() - 1, i).toString().equals("ubicacion")) {
                    JOptionPane.showMessageDialog(null, "En el campo \""
                            + model.getValueAt(model.getRowCount() - 1, i).toString() + "\" se esta pasando de la longitud maxima"
                            + " que es 150");
                    model.setValueAt("", model.getRowCount() - 1, i);
                }
//                if ("int".equals()) {
//                    try {
//                        Integer.parseInt(model.getValueAt(model.getRowCount() - 1, i).toString());
//                    } catch (NumberFormatException e) {
//                        JOptionPane.showMessageDialog(null, "En el campo \""
//                                + model.getValueAt(model.getRowCount() - 1, i).toString()
//                                + "\" esta ingresando caracteres y solo se permiten enteros!");
//                        return false;
//                    }
//                }
            }
        }
        return true;

    }

    public void run() {
        Thread current = Thread.currentThread();
        while (current == hilo) {
            horaa();
            hora_jbl.setText(hora + ":" + minutos + ":" + segundos);
        }
        try {
            Thread.sleep(1000);
        } catch (Exception e) {
        }
    }

    public void horaa() {
        Calendar calendario = new GregorianCalendar();
        Date horaactual = new Date();

        calendario.setTime(horaactual);
        hora = calendario.get(Calendar.HOUR_OF_DAY) > 9 ? "" + calendario.get(Calendar.HOUR_OF_DAY) : "0" + calendario.get(Calendar.HOUR_OF_DAY);
        minutos = calendario.get(Calendar.MINUTE) > 9 ? "" + calendario.get(Calendar.MINUTE) : "0" + calendario.get(Calendar.MINUTE);
        segundos = calendario.get(Calendar.SECOND) > 9 ? "" + calendario.get(Calendar.SECOND) : "0" + calendario.get(Calendar.SECOND);
    }
}
